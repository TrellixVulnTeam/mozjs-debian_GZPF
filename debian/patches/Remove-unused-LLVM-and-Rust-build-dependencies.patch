From: John Paul Adrian Glaubitz <glaubitz@physik.fu-berlin.de>
Date: Thu, 30 Apr 2020 23:20:57 +0200
Subject: Remove unused LLVM and Rust build dependencies

Since the Javascript engine is normally part of Firefox, its build
system has dependencies on the LLVM and Rust toolchains. This limits
the number of architectures which mozjs68 can be built on.

It turns out, however, that neither LLVM nor Rust are used when mozjs68
is being built and these build dependencies are therefore not necessary.

This patch removes them and allows mozjs68 to be built on any architecture.

Bug-Debian: https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=959144
Forwarded: no
Last-Update: 2020-04-30
---
 js/moz.configure |  4 ----
 moz.configure    | 29 -----------------------------
 2 files changed, 33 deletions(-)

diff --git a/js/moz.configure b/js/moz.configure
index b1c9685..16d33da 100644
--- a/js/moz.configure
+++ b/js/moz.configure
@@ -35,10 +35,6 @@ set_define('JS_ENABLE_SMOOSH', enable_smoosh)
 
 include('../build/moz.configure/nspr.configure',
         when='--enable-compile-environment')
-include('../build/moz.configure/rust.configure',
-        when='--enable-compile-environment')
-include('../build/moz.configure/bindgen.configure',
-        when='--enable-compile-environment')
 
 @depends('JS_STANDALONE')
 def js_standalone(value):
diff --git a/moz.configure b/moz.configure
index e86018b..03b4f7e 100755
--- a/moz.configure
+++ b/moz.configure
@@ -626,35 +626,6 @@ check_prog('7Z', ('7z', '7za'), allow_missing=True, when=target_is_windows)
 check_prog('UPX', ('upx',), allow_missing=True, when=target_is_windows)
 
 
-@depends(host_c_compiler, c_compiler, bindgen_config_paths)
-def llvm_objdump(host_c_compiler, c_compiler, bindgen_config_paths):
-    clang = None
-    for compiler in (host_c_compiler, c_compiler):
-        if compiler and compiler.type == 'clang':
-            clang = compiler.compiler
-            break
-        elif compiler and compiler.type == 'clang-cl':
-            clang = os.path.join(os.path.dirname(compiler.compiler), 'clang')
-            break
-
-    if not clang and bindgen_config_paths:
-        clang = bindgen_config_paths.clang_path
-    llvm_objdump = 'llvm-objdump'
-    if clang:
-        out = check_cmd_output(clang, '--print-prog-name=llvm-objdump',
-                               onerror=lambda: None)
-        if out:
-            llvm_objdump = out.rstrip()
-    return (llvm_objdump,)
-
-
-llvm_objdump = check_prog('LLVM_OBJDUMP', llvm_objdump, what='llvm-objdump',
-                          when='--enable-compile-environment',
-                          paths=toolchain_search_path)
-
-add_old_configure_assignment('LLVM_OBJDUMP', llvm_objdump)
-
-
 js_option('--enable-dtrace', help='Build with dtrace support')
 
 dtrace = check_header('sys/sdt.h', when='--enable-dtrace',
